// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240329041406_123b")]
    partial class _123b
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entities.Model.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("userId");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<int[]>("Roles")
                        .HasColumnType("integer[]");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80f7f49b-e5f2-4248-ab3a-349da4390553"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 3, 29, 9, 14, 5, 989, DateTimeKind.Unspecified).AddTicks(7391), new TimeSpan(0, 5, 0, 0, 0)),
                            Email = "ergashovhojimurod4@gmail.com",
                            FirstName = "Hojimurod",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Ergashov",
                            Password = "122333",
                            Roles = new[] { 1, 2, 3 },
                            UserName = "salom123"
                        },
                        new
                        {
                            Id = new Guid("36929717-b202-479b-aa74-6cf59e59cadf"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 3, 29, 9, 14, 5, 989, DateTimeKind.Unspecified).AddTicks(7424), new TimeSpan(0, 5, 0, 0, 0)),
                            Email = "allajanovyakub@gmail.com",
                            FirstName = "Nodirxon",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Nabixonov",
                            Password = "333221",
                            Roles = new[] { 2 },
                            UserName = "alikk123"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
